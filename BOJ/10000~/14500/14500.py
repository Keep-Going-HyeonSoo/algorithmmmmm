import sys

read = sys.stdin.readline

legos = [
    [(0, 0), (0, 1), (0, 2), (0, 3)],  # a1
    [(0, 0), (1, 0), (2, 0), (3, 0)],  # a2
    [(0, 0), (0, 1), (1, 0), (1, 1)],  # b1
    [(0, 0), (1, 0), (2, 0), (2, 1)],  # c1
    [(0, 0), (0, 1), (0, 2), (1, 2)],  # c2
    [(0, 0), (1, 0), (2, 0), (2, -1)],  # c3
    [(0, 0), (0, 1), (0, 2), (1, 0)],  # c4
    [(0, 0), (0, 1), (0, 2), (-1, 2)],  # c5
    [(0, 0), (1, 0), (1, 1), (1, 2)],  # c6
    [(0, 0), (1, 0), (2, 0), (0, 1)],  # c7
    [(0, 0), (0, 1), (1, 1), (2, 1)],  # c8
    [(0, 0), (1, 0), (1, 1), (2, 1)],  # d1
    [(0, 0), (1, 0), (1, -1), (2, -1)],  # d2
    [(0, 0), (0, 1), (1, 1), (1, 2)],  # d3
    [(0, 0), (0, 1), (-1, 1), (-1, 2)],  # d4
    [(0, 0), (0, 1), (0, 2), (1, 1)],  # e1
    [(0, 0), (0, 1), (0, 2), (-1, 1)],  # e2
    [(0, 0), (1, 0), (2, 0), (1, 1)],  # e3
    [(0, 0), (0, 1), (-1, 1), (1, 1)],  # e4
]

n, m = map(int, read().split())
board = [list(map(int, read().split())) for _ in range(n)]

maxx = 0
for x in range(n):
    for y in range(m):
        for lego in legos:
            temp = 0
            for dx, dy in lego:
                nx = x + dx
                ny = y + dy
                if 0 <= nx < n and 0 <= ny < m:
                    temp += board[nx][ny]
                else:
                    break
            maxx = max(maxx, temp)

print(maxx)
